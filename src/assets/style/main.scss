//This is normalize. It resets the CSS to give a common starting ground across the stylesheets.
@import url("https://cdnjs.cloudflare.com/ajax/libs/normalize/6.0.0/normalize.min.css");

//This imports the base module, which contains all of the other modules.
@import "modules/base";

html {
  //Do not override this selector directly.
  margin: 0 !important;
  padding: 0 !important;
  height: 100% !important;
  min-height: 100vh !important;
}

body {
  //Do not override this selector directly.
  margin: 0;
  padding: 0;
}

img {
  //Do not override this selector directly.
  width: 100%;
  height: 100%;
}

/*========================
INDEX PAGE STYLES GO HERE

Created Sep 5th 2021 - Jaxcksn
========================*/

//Wraps the collection of officer pictures and titles.
.OfficerGrid {
  display: grid;
  height: 100%;
  grid-template-columns: repeat(7, 1fr);
}

//Another wrapper for the avatar component
.OfficerItem {
  grid-column: span 4;
  margin-left: 10vw;
}

//The actual item inside grid.
.OfficerAvatar {
  height: 100%;
  padding: 10px;
  display: flex; //Uses flex to accomplish the "stagger" effect in the wireframe.
  align-items: center;
}

//The image of the officer
.OfficerImage {
  width: 10vh;
  height: 10vh;
  border-radius: 100%;
  margin-right: 30px;
}

//For medium, we'll switch it to a 2 column grid so that it doesn't
//become too crowded.
@media screen and (min-width: $bp-sm) {
  .OfficerItem {
    grid-column: span 3;
    margin-left: 0;
  }
}

//For larger screens, we can make everything fit into the grid of 7
@media only screen and (min-width: $bp-md) {
  .OfficerItem {
    grid-column: span 1; //Take up only 1 column.
    max-width: 10vw; // Should only take 70% of the total width. 
    height: 100%; 
  }

  .OfficerGrid {
    height: 100%;
  }

  .OfficerAvatar {
    flex-direction: column; //This is important, it changes the component from horizontal to vertical.
    padding: 0; 
    justify-content: center; //This will be set later when the component is created.
    align-items: center; 
    text-align: center; 
    min-height: 25vw;
  }

  //This class is added when the component is created.
  //Sets the avatar to be at the top of the "stagger"
  .top {
    justify-content: flex-start !important;
  }

  //This class is added when the component is created.
  //Sets the avatar to be at the bottom of the "stagger"
  .bottom {
    justify-content: flex-end !important;
  }

  //Resizes the officer image for the "stagger"
  .OfficerImage {
    width: 10vw;
    height: 10vw;
    margin-right: 0;
  }
}

/*
  The most complex part of the index page is the "hero" at the top. Since the image extends past the margin
  at the large breakpoint. I'll try my best to explain what's happening.

  Esentially, the overflow of the hero image is hidden, but it still needs to be in a container with
  correct margins for the lower breakpoints. So the container is given the inner-container class
  and wrapped in a full container with special padding to allow for this.
*/

//This is to restrict the hero from becoming too short and looking strange
.hero { 
  min-height: 60vh;
}

//This is for the image inside of the hero. 
#hero-image {
  max-height: 100vh; //We don't want it larger than the page.
  min-width: 60vw; //The width should be atleast 60% of the page.
  object-fit: cover; //This allows the image to still look "correct" despite being resized out of the aspect ratio
}

//At all widths below the medium breakpoint
@media screen and (max-width: $bp-md) {
  //Restricting the width and height again
  #hero-image {
    height: auto;
    width: 100%;
  
  }

  //The hero can fill the width without messing up the image now.
  .hero {
    width: 100%;
  }
}

/* 
  This is the parent section of the hero. This is part of the trick used to make the image overshoot the margins
  of the container.
*/
#join-club {
  @extend .container-full; //Giving it the properties of a full container
  overflow: hidden; //Hides the part of the hero image that will overflow out of the viewport.
  min-width: 0; 
}

//To avoid creating double padding for the inner container, we'll set it to zero for this container.
@media #{$medium-and-up} {
  #join-club {
    padding: 0;
  }
}

//========================
// PROJECT PAGE STYLES
//========================

//========================
// EVENTS PAGE STYLES
//========================

//========================
// OTHER STYLES
//========================
